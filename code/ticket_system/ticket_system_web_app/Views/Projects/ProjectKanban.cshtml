
@{

    @model ticket_system_web_app.Models.Project
    var notLogin = ActiveEmployee.Employee == null;
    var hasAdminPerms = (ActiveEmployee.Employee?.IsAdmin ?? false);

    if (notLogin)
    {
        Context.Response.StatusCode = 404;
        return;
    }

}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Board</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(145deg, #608272, #29543d);
            color: #ffffff;
        }

        .container {
            display: flex;
            flex-direction: row;
            height: 100vh;
            width: 100vw;
        }

        .sidebar {
            flex: 0.15;
            background-color: #0f1e13;
            padding: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            border-radius: 10px 10px 10px 10px;
            margin-left: 20px;
            margin-top: 10px;
            margin-bottom: 10px;
        }

            .sidebar img {
                max-width: 100px;
                margin-bottom: 20px;
            }

            .sidebar h2 {
                margin: 0px;
                margin-bottom: 20px;
                font-size: 1.5rem;
                text-align: center;
                border-bottom: 2px solid #ffffff;
                padding-bottom: 5px;
                width: 100%;
            }

        .button {
            background-color: #9f7aea;
            color: white;
            padding: 15px 30px;
            border-radius: 8px;
            cursor: pointer;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            width: 200px;
            display: block;
            text-align: center;
            border: none;
            transition: background 0.2s ease-in-out;
            margin-bottom: 15px;
        }

            .button:hover {
                background-color: #805ad5;
            }

        .main-content {
            flex: 0.8;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .board {
            display: flex;
            gap: 20px;
            width: 100%;
            margin-top: 15px;
        }

        .column {
            background-color: #fff;
            flex: 1;
            border-radius: 10px;
            padding: 10px;
        }

            .column h3 {
                text-align: center;
                background-color: #0f1e13;
                padding: 10px;
                border-radius: 5px;
            }

        .task {
            background-color: #9f7aea;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
            position: relative;
        }

        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .edit-btn {
            font-size: 14px;
            color: white;
            text-decoration: none;
            padding: 2px 6px;
            border-radius: 4px;
            background-color: #6b46c1;
            transition: background-color 0.2s ease;
        }

            .edit-btn:hover {
                background-color: #553c9a;
            }


        .navigation {
            flex: 0.15;
            margin: 20px;
            margin-left: 50px;
            background-color: #0f1e13;
            border-radius: 10px;
            padding: 0;
            height: 97%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            gap: 20px;
        }

        .nav_top {
            width: 95%;
            height: 120px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border-radius: 10px 10px 0 0;
            border-bottom: 2px solid #ffffff;
        }

        .nav-item {
            background-color: #9f7aea;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            text-align: center;
            cursor: pointer;
            width: 80%;
        }

        .nav_image {
            width: 125px;
            height: auto;
            margin-top: 10px;
        }

        .project-kanban-board {
            width: 100%;
            margin: 20px;
            margin-left: 75px;
            background-color: #0f1e13;
            border-radius: 10px;
            padding: 20px;
            height: 100%;
        }

        .search-bar {
            display: flex;
            align-items: center;
            background: #9f7aea;
            padding: 8px;
            border-radius: 5px;
            width: 40%;
        }

            .search-bar input {
                width: 100%;
                border: none;
                background: #9f7aea;
                outline: none;
                padding: 5px;
                color: #ffffff;
            }

                .search-bar input::placeholder {
                    color: #ffffff;
                    opacity: 1;
                }

            .search-bar img {
                width: 20px;
                height: 20px;
                margin-right: 10px;
            }

        .nav_list {
            width: 100%;
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .nav_item {
            width: 80%;
            padding: 10px;
            text-align: center;
            background-color: #9f7aea;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            color: #ffffff;
            margin-bottom: 5px;
        }

        .modal {
            position: fixed;
            inset: 0; 
            display: flex;
            justify-content: center;
            align-items: center; 
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1000;
        }

        .modal-content {
            background-color: #3b5743;
            border-radius: 15px;
            padding: 30px;
            width: 500px;
            max-width: 90vw;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            color: white;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }


            .modal-content label {
                font-weight: bold;
                margin-top: 10px;
            }

            .modal-content input[type="text"],
            .modal-content textarea,
            .modal-content select {
                width: 100%;
                padding: 8px;
                border: none;
                border-radius: 6px;
                background-color: #e6e6e6;
                color: #000;
                font-size: 14px;
            }

            .modal-content button {
                margin-top: 15px;
                padding: 10px 20px;
                font-size: 14px;
                font-weight: bold;
                border-radius: 6px;
                border: none;
                cursor: pointer;
            }

                .modal-content button[type="button"]:first-of-type {
                    background-color: #805ad5;
                    color: white;
                }

                .modal-content button[type="button"]:last-of-type {
                    background-color: #e53e3e;
                    color: white;
                    margin-left: 10px;
                }



    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <img src="~/assets/ticket_system_logo.png" alt="Project Icon">
            <h2>@Model.PTitle</h2>
            @if (hasAdminPerms)
            {
                <button class="button">Create Task</button>
                <button class="button" onclick="location.href='/Project/EditKanban/@Model.PId'">
                    Edit Board
                </button>
            }

        </div>

        <div class="main-content">
            <div class="project-kanban-board">
                <h1>@Model.PTitle - Kanban Board</h1>
                <div class="search-bar">
                    <img src="~/assets/search_icon_img.png" alt="Search">
                    <input type="text" placeholder="Search Task...">
                </div>
                <div class="board">
                    @foreach (var state in Model.ProjectBoard?.States ?? Enumerable.Empty<ticket_system_web_app.Models.BoardState>())
                    {
                        <div class="column">
                            <h3>@state.StateName</h3>

                            @foreach (var task in state.Tasks ?? Enumerable.Empty<ticket_system_web_app.Models.ProjectTask>())
                            {
                                <div class="task">
                                    <div class="task-header">
                                        <strong>Task #@task.TaskId</strong>
                                        <a href="#" class="edit-btn"
                                           data-task-id="@task.TaskId"
                                           data-state-id="@task.StateId"
                                           data-priority="@task.Priority"
                                           data-summary="@task.Summary"
                                           data-description="@task.Description"
                                           data-assignee-id="@task.AssigneeId"
                                           onclick="openEditModal(this)">Edit</a>

                                    </div>
                                    @task.Summary<br />
                                    <small>Priority: @task.Priority</small><br />
                                    <small>Assigned to: @(task.Assignee?.FName ?? "Unassigned")</small>
                                </div>
                            }
                        </div>
                    }
                </div>

            </div>
        </div>

        <div class="navigation">
            <div class="nav_top">
                <img src="~/assets/navigation_bar_img.png" alt="Navigation Image" class="nav_image">
            </div>
            <ul class="nav_list">
                <li class="nav_item" onclick="location.href='@Url.Action("Index", "LandingPage")';">Home</li>
            </ul>
        </div>
    </div>

    <div id="editTaskModal" class="modal" style="display:none;">
        <div class="modal-content">
            <h2>Edit Task</h2>
            <form id="editTaskForm">
                <input type="hidden" id="editTaskId" name="TaskId" />

                <label>State</label>
                <select id="editTaskStateId" name="StateId">
                    @foreach (var state in Model.ProjectBoard?.States ?? Enumerable.Empty<ticket_system_web_app.Models.BoardState>())
                    {
                        <option value="@state.StateId">@state.StateName</option>
                    }
                </select>

                <label>Priority</label>
                <select id="editTaskPriority" name="Priority">
                    <option value="1">Low</option>
                    <option value="2">Medium</option>
                    <option value="3">High</option>
                </select>

                <label>Assignee</label>
                <select id="editTaskAssigneeId" name="AssigneeId">
                    <option value="">Unassigned</option>
                    @foreach (var emp in ViewBag.ProjectTeam as List<ticket_system_web_app.Models.Employee>)
                    {
                        <option value="@emp.EId">@emp.FName @emp.LName</option>
                    }
                </select>

                <label>Summary</label>
                <input type="text" id="editTaskSummary" name="Summary" />

                <label>Description</label>
                <textarea id="editTaskDescription" name="Description"></textarea>

                <button type="button" onclick="submitEditTask()">Edit Task</button>
                <button type="button" onclick="closeModal()">Cancel</button>
            </form>
        </div>
    </div>
    <script src="~/js/Projects/ProjectBoard.js"></script>
</body>
</html>

