@{
    if (!ActiveEmployee.IsLoggedIn())
    {
        Context.Response.StatusCode = 404;
        Context.Response.Redirect("/Login/Index");
        return;
    }

    @model ticket_system_web_app.Models.Project
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Board</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(145deg, #608272, #29543d);
            color: #ffffff;
        }

        .container {
            display: flex;
            flex-direction: row;
            height: 100vh;
            width: 100vw;
        }

        .sidebar {
            flex: 0.15;
            background-color: #0f1e13;
            padding: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            border-radius: 10px 10px 10px 10px;
            margin-left: 20px;
            margin-top: 10px;
            margin-bottom: 10px;
        }

            .sidebar img {
                max-width: 100px;
                margin-bottom: 20px;
            }

            .sidebar h2 {
                margin: 0px;
                margin-bottom: 20px;
                font-size: 1.5rem;
                text-align: center;
                border-bottom: 2px solid #ffffff;
                padding-bottom: 5px;
                width: 100%;
            }

        .button {
            background-color: #9f7aea;
            color: white;
            padding: 15px 30px;
            border-radius: 8px;
            cursor: pointer;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            width: 200px;
            display: block;
            text-align: center;
            border: none;
            transition: background 0.2s ease-in-out;
            margin-bottom: 15px;
        }

            .button:hover {
                background-color: #805ad5;
            }

        .main-content {
            flex: 0.8;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .board {
            display: flex;
            gap: 20px;
            width: 100%;
            margin-top: 15px;
        }

        .column {
            background-color: #fff;
            flex: 1;
            border-radius: 10px;
            padding: 10px;
        }

            .column h3 {
                text-align: center;
                background-color: #0f1e13;
                padding: 10px;
                border-radius: 5px;
            }

        .task {
            background-color: #9f7aea;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
            position: relative;
        }

        .task:hover {
                background-color: #553c9a;
        }

        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .task-actions {
            display: flex;
            gap: 10px;
        }

        .edit-btn,
        .delete-btn {
            font-size: 14px;
            color: white;
            text-decoration: none;
            padding: 4px 10px;
            border-radius: 5px;
            font-weight: bold;
            transition: background-color 0.2s ease;
        }

        .edit-btn {
            background-color: #6b46c1;
        }

            .edit-btn:hover {
                background-color: #553c9a;
            }

        .delete-btn {
            background-color: #e53e3e;
        }

            .delete-btn:hover {
                background-color: #c53030;
            }


        .navigation {
            flex: 0.15;
            margin: 20px;
            margin-left: 50px;
            background-color: #0f1e13;
            border-radius: 10px;
            padding: 0;
            height: 97%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
            gap: 20px;
        }

        .nav_top {
            width: 95%;
            height: 120px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            border-radius: 10px 10px 0 0;
            border-bottom: 2px solid #ffffff;
        }

        .nav-item {
            background-color: #9f7aea;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            text-align: center;
            cursor: pointer;
            width: 80%;
        }

        .nav_image {
            width: 125px;
            height: auto;
            margin-top: 10px;
        }

        .project-kanban-board {
            width: 100%;
            margin: 20px;
            margin-left: 75px;
            background-color: #0f1e13;
            border-radius: 10px;
            padding: 20px;
            height: 100%;
        }

        .search-bar {
            display: flex;
            align-items: center;
            background: #9f7aea;
            padding: 8px;
            border-radius: 5px;
            width: 40%;
        }

            .search-bar input {
                width: 100%;
                border: none;
                background: #9f7aea;
                outline: none;
                padding: 5px;
                color: #ffffff;
            }

                .search-bar input::placeholder {
                    color: #ffffff;
                    opacity: 1;
                }

            .search-bar img {
                width: 20px;
                height: 20px;
                margin-right: 10px;
            }

        .nav_list {
            width: 100%;
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .nav_item {
            width: 80%;
            padding: 10px;
            text-align: center;
            background-color: #9f7aea;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            color: #ffffff;
            margin-bottom: 5px;
        }

        .modal {
            position: fixed;
            inset: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1000;
        }

        .modal-content {
            background-color: #3b5743;
            border-radius: 20px;
            padding: 40px;
            width: 700px;
            max-width: 90vw;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
            color: white;
            display: flex;
            flex-direction: column;
            gap: 20px;
            font-family: Arial, sans-serif;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

            .modal-content h2 {
                font-size: 26px;
                font-weight: bold;
                margin-bottom: 5px;
            }

        .modal-row {
            display: flex;
            flex-direction: row;
            gap: 20px;
        }

        .modal-column {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .modal-content label {
            font-weight: bold;
            margin-top: 5px;
            margin-bottom: 1px;
            font-size: 14px;
        }

        .modal-content input[type="text"],
        .modal-content textarea,
        .modal-content select {
            padding: 10px;
            border: none;
            border-radius: 8px;
            background-color: #f0f0f0;
            color: #000;
            font-size: 14px;
        }

        .modal-content textarea {
            resize: vertical;
            min-height: 100px;
        }

        .modal-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            padding-top: 10px;
        }

            .modal-buttons button {
                padding: 12px 24px;
                font-size: 14px;
                font-weight: bold;
                border-radius: 10px;
                border: none;
                cursor: pointer;
            }

            .modal-buttons .cancel-btn {
                background-color: #e53e3e;
                color: white;
            }

            .modal-buttons .save-btn {
                background-color: #805ad5;
                color: white;
            }

        .task-change-tabs {
            border-top: 1px solid #ddd;
            padding-top: 20px;
        }

        .tab-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }

        .tab-button {
            flex: 1;
            padding: 10px;
            background-color: #f0f0f0;
            color: #333;
            border: none;
            border-bottom: 2px solid transparent;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px 5px 0 0;
            transition: background-color 0.2s ease;
        }

            .tab-button.active {
                background-color: #fff;
                border-bottom: 2px solid #805ad5;
                font-weight: bold;
            }

        .tab-content {
            display: none;
            background-color: #fff;
            color: #333;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 0 5px 5px 5px;
        }

            .tab-content.active {
                display: block;
            }

        .history-table {
            width: 100%;
            border-collapse: collapse;
        }

            .history-table th,
            .history-table td {
                padding: 8px;
                border: 1px solid #ccc;
                text-align: left;
                font-size: 14px;
            }

            .history-table th {
                position: sticky;
                top: 0;
                background-color: #f7f7f7;
                z-index: 1;
            }

        #newCommentForm {
            display: flex;
            flex-direction: column;
            justify-content: end;
            flex-wrap: wrap-reverse;
        }

        .comments-section ul {
            list-style: none;
            padding: 0;
            margin-bottom: 15px;
        }

        .comments-section li {
            background: #f7f7f7;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .comments-section textarea {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            resize: vertical;
            margin-bottom: 10px;
        }

        .comments-section .save-btn {
            width: 20%;
        }

        .history-scroll-container {
            max-height: 200px; 
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .assigned-groups {
            background-color: #3b5743;
            padding: 10px;
            border-radius: 8px;
            margin: 10px 0;
            color: #ffffff;
            font-size: 14px;
        }

            .assigned-groups strong {
                display: block;
                margin-bottom: 5px;
                color: #9f7aea;
            }

            .assigned-groups ul {
                list-style: none;
                padding-left: 0;
                margin: 0;
            }

            .assigned-groups li {
                background-color: #4a6c57;
                padding: 6px 10px;
                margin-bottom: 5px;
                border-radius: 5px;
            }







    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <img src="~/assets/ticket_system_logo.png" alt="Project Icon">
            <h2>@Model.PTitle</h2>
            <button class="button" onclick="openCreateTaskModal()">Create Task</button>
            @if (ActiveEmployee.IsAdmin() || ActiveEmployee.IsManager())
            {
                <button class="button" onclick="location.href='/Project/EditKanban/@Model.PId'">
                    Edit Board
                </button>
            }
        </div>

        <div class="main-content">
            <div class="project-kanban-board">
                <h1>@Model.PTitle - Kanban Board</h1>
                <div class="search-bar">
                    <img src="~/assets/search_icon_img.png" alt="Search">
                    <input type="text" placeholder="Search Task...">
                </div>
                <div class="board">
                    @foreach (var state in Model.ProjectBoard?.States ?? Enumerable.Empty<ticket_system_web_app.Models.BoardState>())
                    {
                        <div class="column">
                            <h3>@state.StateName</h3>
                            @if (state.AssignedGroups != null && state.AssignedGroups.Any())
                            {
                                <div class="assigned-groups">
                                    <strong>Groups:</strong>
                                    <ul>
                                        @foreach (var assignedGroup in state.AssignedGroups)
                                        {
                                            <li>@assignedGroup.Group?.GName</li>
                                        }
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <div class="assigned-groups">
                                    <em>No groups assigned</em>
                                </div>
                            }

                            @foreach (var task in state.Tasks ?? Enumerable.Empty<ticket_system_web_app.Models.ProjectTask>())
                            {
                                <div class="task">
                                    <div class="task-header">
                                        <strong>Task #@task.TaskId</strong>
                                        <div class="task-actions">
                                            <a href="#" class="edit-btn"
                                               data-task-id="@task.TaskId"
                                               data-state-id="@task.StateId"
                                               data-priority="@task.Priority"
                                               data-summary="@task.Summary"
                                               data-description="@task.Description"
                                               data-assignee-id="@task.AssigneeId"
                                               onclick="openEditModal(this)">View</a>

                                            <a href="#" class="delete-btn"
                                               data-task-id="@task.TaskId"
                                               onclick="confirmDeleteTask(this)">Delete</a>
                                        </div>
                                    </div>
                                    @task.Summary<br />
                                    <small>Priority: @task.Priority</small><br />
                                    <small>Assigned to: @(task.Assignee?.FName ?? "Unassigned")</small>
                                </div>
                            }
                        </div>
                    }
                </div>

            </div>
        </div>

        <div class="navigation">
            <div class="nav_top">
                <img src="~/assets/navigation_bar_img.png" alt="Navigation Image" class="nav_image">
            </div>
            <ul class="nav_list">
                <li class="nav_item" onclick="location.href='@Url.Action("Index", "LandingPage")';">Home</li>
            </ul>
        </div>
    </div>

    <div id="editTaskModal" class="modal" style="display:none;">
        <div class="modal-content">
            <h2 id="modal-title">Task</h2>
            <form id="editTaskForm">
                <input type="hidden" id="editTaskId" name="TaskId" />

                <div class="modal-row">
                    <div class="modal-column">
                        <label for="editTaskStateId">State</label>
                        <select id="editTaskStateId" name="StateId">
                            @foreach (var state in Model.ProjectBoard.States)
                            {
                                <option value="@state.StateId">@state.StateName</option>
                            }
                        </select>
                    </div>

                    <div class="modal-column">
                        <label for="editTaskPriority">Priority</label>
                        <select id="editTaskPriority" name="Priority">
                            <option value="1">Low</option>
                            <option value="2">Medium</option>
                            <option value="3">High</option>
                        </select>
                    </div>

                    <div class="modal-column">
                        <label for="editTaskAssigneeId">Assignee</label>
                        <select id="editTaskAssigneeId" name="AssigneeId">
                            <option value="">Unassigned</option>
                        </select>
                    </div>
                </div>


                <div class="form-group">
                    <label for="editTaskSummary">Summary*</label>
                    <input type="text" id="editTaskSummary" name="Summary" />
                </div>

                <div class="form-group">
                    <label for="editTaskDescription">Description</label>
                    <textarea id="editTaskDescription" name="Description"></textarea>
                </div>

                <div class="modal-buttons">
                    <button type="button" class="cancel-btn" onclick="closeModal()">Cancel</button>
                    <button type="button" id="edit-task" class="save-btn" onclick="submitEditTask()">Edit Task</button>
                    <button type="button" id="create-task" class="save-btn" onclick="submitCreateTask()">Create Task</button>
                </div>
            </form>

            <div id="comments-history" class="task-change-tabs">
                <div class="tab-buttons">
                    <button type="button" class="tab-button active" onclick="switchTab('comments')">Comments</button>
                    <button type="button" class="tab-button" onclick="switchTab('history')">History</button>
                </div>

                <div id="tab-comments" class="tab-content active">
                    <div class="comments-section">
                        <ul>
                            @foreach (var comment in ViewBag.TaskComments as List<string> ?? new List<string>())
                            {
                                <li>@comment</li>
                            }
                        </ul>
                        <form id="newCommentForm" onsubmit="submitComment(event)">
                            <textarea id="newCommentText" placeholder="Add a comment..."></textarea>
                            <button type="submit" class="save-btn">Submit Comment</button>
                        </form>
                    </div>
                </div>

                <div id="tab-history" class="tab-content">
                    <div class="history-scroll-container">
                        <table class="history-table">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Type</th>
                                    <th>Previous Value</th>
                                    <th>New Value</th>
                                    <th>Editor</th>
                                </tr>
                            </thead>
                            <tbody id="historyTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>



        </div>
    </div>
    <script src="~/js/Projects/ProjectBoard.js"></script>
    <input type="hidden" id="authToken" value="@(ActiveEmployee.AuthToken)" />
    <script>
                initStatesWithEmployees(@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
            Model.ProjectBoard.States.Select(s => new
            {
                StateId = s.StateId,
                    Employees = s.AssignedGroups
                    .SelectMany(ag => ag.Group.Employees)
                    .Concat(s.AssignedGroups
                        .Where(ag => ag.Group.Manager != null)
                        .Select(ag => ag.Group.Manager))
                    .Select(e => new { e.EId, Name = e.FName + " " + e.LName })
                    .Distinct()
            })
        )));

    </script>

</body>
</html>

