@{
    @model ticket_system_web_app.Models.ProjectBoard
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Board</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.2/Sortable.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(145deg, #608272, #29543d);
            color: #ffffff;
        }

        .container {
            display: flex;
            flex-direction: row;
            height: 100vh;
            width: 100vw;
        }

        .main-content {
            flex: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .board {
            display: flex;
            gap: 20px;
            width: 100%;
        }

        .column {
            background-color: #222;
            flex: 1;
            border-radius: 10px;
            padding: 10px;
        }

            .column h3 {
                text-align: center;
                background-color: #0f1e13;
                padding: 10px;
                border-radius: 5px;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="main-content">
            <h1>Edit Board</h1>
            <div id="board" class="board">
                @foreach (var state in Model.States.OrderBy(s => s.Position))
                {
                    <div class="column" id="state-@state.StateId" data-stateid="@state.StateId">
                        <h3>@state.StateName</h3>
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let board = document.getElementById("board");

            new Sortable(board, {
                animation: 150,
                onEnd: function (evt) {
                    let stateOrder = [];
                    document.querySelectorAll('.column').forEach((column, index) => {
                        stateOrder.push({
                            stateId: column.getAttribute("data-stateid"),
                            position: index
                        });
                    });

                    fetch('/Projects/UpdateBoardStateOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(stateOrder)
                    });
                }
            });
        });
    </script>
</body>
</html>
